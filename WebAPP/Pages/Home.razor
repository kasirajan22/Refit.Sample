@page "/"
@inject IUserApiService userService;

<PageTitle>Users</PageTitle>

<h1>Users</h1>


<table class="table table-bordered">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Email</th>
            <th>Country</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in users)
        {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Name</td>
                        <td>@item.Email</td>
                        <td>@item.Country</td>
                        <td>
                            <button class="btn btn-primary" @onclick="@(e => AddUser(item))">Add </button>
                            <button class="btn btn-warning" @onclick="@(e => UpdateUser(item))">Update </button>
                            <button class="btn btn-danger" @onclick="@(e => DeleteUser(item))">Delete </button>
                        </td>
                    </tr>
        }
    </tbody>
</table>
@code {
    List<User> users = new();

    protected override async Task OnInitializedAsync()
    {
        users = await userService.GetAllUsers();
        if (users is null)
            users = new();
    }

    private async Task AddUser(User user)
    {
        await userService.AddUser(new User
            {
                Id = 10,
                Name = "New User",
                Email = "new1@demo.com",
                Country = "Japan"
            });

        users = await userService.GetAllUsers();
    }

    private async Task UpdateUser(User user){
        user.Name = "Updated Name";
        await userService.UpdateUser(user.Id , user);
        users = await userService.GetAllUsers();
    }

    private async Task DeleteUser(User user){
        await userService.DeleteUser(user.Id);
        users = await userService.GetAllUsers();
    }
}